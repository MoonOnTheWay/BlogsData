[
    {
        "url": "https://medium.com/databloid/write-for-us-write-for-our-audience-write-for-yourself-f3d13dedd813?source=---------0",
        "title": "Write for us, write for our audience, write for yourself",
        "text": "As a freshly started newspaper DaTabloid is looking for enthusiastic and talented writers who will contribute with entertaining and interesting content focusing on data science, machine learning and their creative application to solve problems.\n\nWe want to engage not only Machine Learning professionals but also everyday people who are fascinated about this topic. Be entertaining, amuse people with what ML can do and what magic is hidden in the data.\n\nBecause its fun! Beside:\n\nBeside creating good content not much. You will still remain the owner of your article. You can modify it anytime you want or even withdraw it from the publication (but c\u2019mon why would you do such a foolish thing? \ud83d\ude03)\n\nJust leave a private note here with the link of your post that you would propose to feature here. Once we review and approve it you will be officially our great writer. (you can even put it to LinkedIn \ud83d\ude09)\n\nOnce you are a writer you can publish a new article in edit->\u2026->Add to publication and then just publish."
    },
    {
        "url": "https://medium.com/databloid/deepfakes-explained-hottest-girls-on-the-net-part-2-cc72b74943e9?source=---------1",
        "title": "DeepFakes explained + Hottest girls on the net Part 2",
        "text": "In the first part of this post I explained the algorithm behind deepfake that is able to create highly realistic face swap on videos.\n\nBut many of you asked \u201cOkay, but where are the hot girls?\u201d. This second part will answer this question.\n\nIt is a common problem in surveys that what people say is not always what they actually believe. Not because in any way they would intend to misguide us but simply because it is not always easy to quickly answer even a question that looks so simple like that. There are so many nice and famous girls out there how could we select in some seconds the best ones. Probably we can quickly select nice ones but I am not sure they would be really the most stunning ones.\n\nA good workaround for this problem if people have to make some effort before they can select their preferred solution. The bigger the effort the higher the chance that people will make very thorough and careful evaluation before they make their final decisions. In these cases even very small sample sizes can lead to better results than big surveys. A good example for this are the betting markets that are much better in predicting the outcome of certain events than surveys conducted on a much bigger sample. Here effort is represented by the money that we use to bet on certain outcomes. Certainly we are much more careful in making a decision when our money is on stake.\n\nNot only money but also time can be considered as a kind of effort. And do you know what takes a lot of time? Creating deepfake videos. It can easily take 10\u201312 hours even on a computer with a decent GPU to produce one. Certainly you will think long what is really interesting for you or for your target audience before starting to create one. If we can somehow collect this data we will have a very good survey.\n\nMy idea was to collect from the deepfakes subreddit all the post titles. From these titles we can extract the name of deepfaked persons, count them and create our ranking.\n\nLet\u2019s see how can we do that in Python in one of the greatest (at least according to me \ud83d\ude04) all around programming language.\n\nIn Python we have a nice package for almost every tasks. We start with importing them:\n\nUsing praw we downloaded all post titles from the deepfakes subreddit. We assume that a name consist of two words where the first character of each word is capitalized and the rest is lowercase. We extract names with that pattern from the titles.\n\nThe net is crazy about Nicolas Cage but he is very often just referenced as Nic Cage. Let\u2019s merge this two names since they represent the same person.\n\nWe use Pandas this awesome Python library to do data manipulation effectively. Certainly we can do it just using simple array operations but believe me it would be much longer and less elegant. (I actually did that first so you can really trust me on that\u2026) In just one line we can count the names and order them.\n\nBut now lets see the results (names and counts) that we all waited for so long.\n\nWow, Emma Watson is the hottest girl on the net according to the deepfake videos, big applause for her!\n\nBut everyone's all time favorite Nic Cage is a really strong contender. Probably he is preferred for other skills than Emma.\n\nInteresting to see that many actress playing super hero roles and from Game of Thrones got a high position.\n\nThe Trump family has two members in the top 8. In case of Ivanka it is probably more obvious than for Donald. Michelle Obama is the only other politician who could reach the top league.\n\nInterestingly we have also a porn star here Elsa Jean. Probably her face was not inserted into the movies rather the other way around. (though it would be an interesting approach as well)"
    },
    {
        "url": "https://medium.com/databloid/deepfakes-explained-hottest-girls-on-the-net-part-1-e60c67434f7?source=---------2",
        "title": "DeepFakes explained + Hottest girls on the net Part 1",
        "text": "You may have already heard about DeepFake or if not then I\u2019m sure you will hear about it very soon.\n\nNot so long ago a reddit user called deepfakes posted some highly realistic but fake videos. Using a smart deep learning algorithm he swapped the faces of the original actors with some other famous persons. Yes, before you ask , it was adult content. As so many things in the history of humankind this great invention was also driven by t\u0336h\u0336e\u0336 \u0336m\u0336i\u0336l\u0336i\u0336t\u0336a\u0336r\u0336y\u0336 porn.\n\nCertainly its application area is much wider than simply producing stunningly realistic adult movies. I\u0336t\u0336 \u0336a\u0336l\u0336s\u0336o\u0336 \u0336i\u0336n\u0336c\u0336l\u0336u\u0336d\u0336e\u0336s\u0336 \u0336p\u0336u\u0336t\u0336t\u0336i\u0336n\u0336g\u0336 \u0336N\u0336i\u0336c\u0336 \u0336C\u0336a\u0336g\u0336e\u0336 \u0336t\u0336o\u0336 \u0336e\u0336v\u0336e\u0336r\u0336y\u0336 \u0336m\u0336o\u0336v\u0336i\u0336e\u0336s\u0336!\u0336 Do you remember for some of the latest tragic deaths of Hollywood actors and how challenging and expensive it was to finish their latest movies afterwards? Using deepfakes these tasks can be done easily at home on a desktop computer in hours in an extremely high quality.\n\nSo how does this great algorithm works? We can break it down into 3 major steps:\n\nWe only want to swap faces so our first step must be to identify faces on pictures. Once we found their position we can also identify their orientation and size. Using this information we can warp all picture to a general format.\n\nFace detection is a traditional machine learning problem. One common way to do that is to use the Histogram of Oriented Gradients (or simply HOG). This method looks at each pixel of our picture and compares its darkness to the surrounding pixels. Then we can draw an arrow (meaning gradient) from the lighter to the darker points. We will use this representation of our original images. There is a HOG pattern that was trained on thousands of faces. We can compare it to our converted images to find areas that are very similar thereby identifying faces.\n\nUsing our extracted face pictures we can train an autoencoder.\n\nAutoencoder is a type of neural network (the computational system behind deep learning). Its input is a picture and its output is the same picture. Doesn\u2019t make any sense, right?\n\nAutoencoders consist of 2 parts: an encoder and a decoder. Encoder learns a much shorter representation of the input data while the decoder is able to transform it back to the original data. So encoder compress the data into a shorter size and decoder translate is back to the original longer format.\n\nWe train our model on our target pictures so our network will learn only how to encode a short representation into our target persons\u2019s face. It means even if our input will be a different face our model will convert it into the original person\u2019s face.\n\nNow we can identify faces in our target video (video is just a bunch of pictures) then run them through our trained model converting the original actor to the target person.\n\nIn this phase we will take the new pictures created by the autoencoder. In the alignment phase we saved their original orientation and size so doing some backward engineering we can put them back into the original picture. Out of the modified pictures we can recreate our video.\n\nAnd that\u2019s all, our new deepfake video is ready.\n\nCertainly there are some more bells and whistles here and there but the basic algorithm works simply like this."
    }
]