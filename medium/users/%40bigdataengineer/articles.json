[
    {
        "url": "https://medium.com/@bigdataengineer/spark-streaming-connection-pooling-3fa183ca6ded?source=user_profile---------1----------------",
        "title": "Spark Streaming Connection Pooling \u2013 Puneet Singh \u2013",
        "text": "Reading data into Spark Streaming from Kafka Topic is taken care of by inbuilt well supported APIs. However, exporting data from Spark Streaming to Kafka Topic is developer\u2019s overhead. Bad implementations can often take a toll on performance which would be unacceptable in many scenarios. A powerful design pattern should be in place to send data out to external systems, correctly and efficiently.\n\nAs per my research, understanding and experience the documentation on such implementation in Scala is abundant however applying the similar principles in Java is a challenge.\n\nThe below snippets depict the usage of Apache Commons Pool library to create reusable external source connections in Spark Streaming applications. It gives the user great flexibility in terms of handling the connection configurations per RDD/Partition.\n\nCreate context class for each partition which can initialize connections to external systems like JDBC, Kafka Producer, Elasticsearch etc. Here I am demonstrating the implementation for Kafka Producer object pooling.\n\nCreate Kafka Connection Factory for initializing the configured number of Kafka Producers:\n\nCreate Partition Context class for getting the reference to initialized Kafka Producer Connection Pool:\n\nCreating and destroying a connection object for each record can incur unnecessarily high overheads and can significantly reduce the overall throughput of the system. Create a pool of connection objects and send all the records in a RDD partition using those connections. Use the created Connection Pool in foreachPartition:\n\nThe above implementation provides a scalable solution for exporting data from Spark Streaming API to external systems. Connection objects have time and resource overheads which can be avoided in such implementation. A static pool of connection objects than can be reused as RDDs of multiple batches are pushed to the external system, thus reducing the overheads.\n\nFind complete implementation here. You can clone/fork the project and get your hands dirty with the implementation."
    }
]