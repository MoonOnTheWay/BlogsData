[
    {
        "url": "https://becominghuman.ai/understanding-and-building-generative-adversarial-networks-gans-8de7c1dc0e25?source=user_profile---------1----------------",
        "title": "Understanding and building Generative Adversarial Networks(GANs)- Deep Learning with PyTorch.",
        "text": "We\u2019ll be building a Generative Adversarial Network that will be able to generate images of birds that never actually existed in the real world.\n\nBefore we actually start building a GAN, let us first talk about the idea behind GANs. GANs were invented by Ian Goodfellow, heobtained his B.S. and M.S. in computer science from Stanford University and his Ph.D. in machine learning from the Universit\u00e9 de Montr\u00e9al,. This is the new big thing in the field of Deep Learning right now. Yann LeCun, the director of Facebook AI said :\n\nNeural Networks are good at classifying and predicting things, and AI Researchers wanted to make the neural net more human in nature by allowing it to CREATE rather than just letting it see things, and turns out that Ian Goodfellow was successful in inventing a class of Deep Learning Model which could do that.\n\nGANs contain two separate neural networks. Let us call one neural network as \u201cG\u201d, which stands for Generator and the other neural network as \u201cD\u201d, which is a Discriminator. The Generator first generates random images and a Discriminator sees those images and tells the Generator how real the generated images are.\n\nIn the starting phase, a Generator model takes random noise signals as input and generates a random noisy image as the output, gradually with the help of the Discriminator, it starts generating images of a particular class that look real.\n\nThe Discriminator which will be the opponent of Generator is fed with both the generated images as well as a certain class of images at the same time, allowing it to tell the generated how the real image looks like.\n\nAfter reaching a certain point, the Discriminator will be unable to tell if the generate image is a real or a fake image, and that is when we can see images of a certain class(class that the discriminator is trained with.) being generated by out Generator that never actually existed before."
    },
    {
        "url": "https://becominghuman.ai/building-an-image-classifier-using-deep-learning-in-python-totally-from-a-beginners-perspective-be8dbaf22dd8?source=user_profile---------2----------------",
        "title": "Simple Image Classification using Convolutional Neural Network \u2014 Deep Learning in python.",
        "text": "In this article we will be solving an image classification problem, where our goal will be to tell which class the input image belongs to. The way we are going to achieve it is by training an artificial neural network on few thousand images of cats and dogs and make the NN(Neural Network) learn to predict which class the image belongs to, next time it sees an image having a cat or dog in it.\n\nThe key thing to understand while following this article is that the model we are building now can be trained on any type of class you want, i am using cat and dog only as a simple example for making you understand how convolutional neural networks work. For example, if there are any doctors reading this, after completing this article they will be able to build and train neural networks that can take a brain scan as an input and predict if the scan contains a tumour or not.\n\nSo coming to the coding part, we are going to use Keras deep learning library in python to build our CNN(Convolutional Neural Network).\n\nBefore we jump into building the model, i need you to download all the required training and test dataset by going into this drive by clicking here, download both the folders named \u201c test_set\u201d and \u201ctraining_set\u201d into your working directory, it may take a while as there are 10,000 images in both folders, which is the training data as well as the test dataset. Make sure to create a new directory and name it \u201cwhatever_you_want\u201d and paste the above downloaded dataset folders into it.\n\nLet\u2019s see what does the folders you just downloaded have in them. First, the folder \u201ctraining_set\u201d contains two sub folders cats and dogs, each holding 8000 images of the respective category. Second, the folder \u201ctest_set\u201d contains two sub folders cats and dogs, each holding 2000 images of respective category.\n\nThe process of building a Convolutional Neural Network always involves four major steps.\n\nWe will be going through each of the above operations while coding our neural network. So first go to your working directory and create a new file and name it as \u201cwhatever_you_want\u201d.py , but I am going to refer to that file as cnn.py, where \u2018cnn\u2019 stands for Convolutional Neural Network and \u2018.py\u2019 is the extension for a python file. You will be appending whatever code I write below to this file.\n\nFirst let us import all the required keras packages using which we are going to build our CNN, make sure that every package is installed properly in your machine, there is two ways os using keras, i.e Using Tensorflow backend and by Using Theano backend, but don\u2019t worry, all the code remains the same in either cases. I tested the below code using Tensorflow backend."
    }
]