[
    {
        "url": "https://medium.com/@alibugra/capture-http-and-https-network-traffic-from-iphone-using-charles-38d50ebec0ec?source=user_profile---------1----------------",
        "title": "Capture HTTP and HTTPS network traffic from iPhone using Charles",
        "text": "Many mobile applications that we use need internet to transfer data. So, they use web services. In order to access those web services, we need to listen network traffic. Therefore, various softwares developed to listen and capture that traffic. One of them is Charles. Charles is a web proxy that captures network requests and responses from web applications. It runs on your own computer. Also, it records and displays all sent and received data for you. This post describes the steps of capturing HTTP and HTTPS network traffic from iPhone using Charles on your own computer. It consists of the following steps.\n\nFirst of all, we download Charles from https://www.charlesproxy.com/download/ with respect to operating system and install it. For this post, we will be using Ubuntu.\n\nThen, Charles will be shown in search results after installation as below. Click and continue to use it for 30 day.\n\nWe need local IP address of your computer Wi-Fi network and proxy port number in order to set connection between computer and iPhone. Get proxy port number from Proxy settings menu under Charles. Then, get local IP address on your computer. To find out your IP address on Ubuntu, type following command on terminal. It will be like 192.168.X.Y format.\n\nNow, you have IP and port number. Go to Settings app and tap on Wi-Fi, then click blue i icon near connected Wi-Fi under Choose a network. From HTTP Proxy, go to Manual tab and type your IP and Port (default 8888) in required fields.\n\nYou are ready to capture HTTP network traffic via Charles. There will be an alert when you would like to open Charles after Manual HTTP Proxy configuration. You will click \u201cAllow\u201d and continue.\n\nThen, you can easily take data from \u201chttp\u201d urls. But, when you want to listen any \u201chttps\u201d url, you should enable SSL Proxying for that https url. In order to enable it, right click the url and check the \u201cEnable SSL Proxying\u201d. Furthermore, responses from https urls will return as encrypted messages. In order to decrypt them, we need to install certificates.\n\nTo install Charles certificate, please browse to http://www.charlesproxy.com/getssl/ url. Then, your browser will ask a message as below. Click \u201cAllow\u201d and go to installation page.\n\nIn install profile page, Charles Proxy Certificate will be \u201cNot Verified\u201d. Install and verify it. So that, installed certificate will be shown in \u201cSettings > General > Profiles\u201d.\n\nIn addition, you should enable trust settings for installed certificates. Go to \u201cSettings > General > About > Certificate Trust Settings\u201d\n\nIn order to enable any root certificate which is listed in current screen, click switch button near certificates and choose \u201cContinue\u201d option. So that, you will allow third parties (such as; Charles) to view private data sent to websites.\n\nAs we did in capture network traffic section, we open Charles again, and it gives us meaningful information. (For example; https://api.medium.com)\n\nAs a result, you have learned how to install and use Charles on your own computer, and how to capture network traffic of your mobile phone."
    },
    {
        "url": "https://medium.com/@alibugra/creating-rest-api-for-a-word2vec-model-with-gensim-76791ba868b9?source=user_profile---------2----------------",
        "title": "Creating REST API for a Word2Vec model with Gensim \u2013 Ali Bu\u011fra Kanburo\u011flu \u2013",
        "text": "There is a Turkish dataset that includes 750 sentences about 5 categories (health, sport, religious, economy and politics) collected from internet.\n\nNow, we can start our implementation by importing our installed libraries to use them in a python file that is \u201ctrain.py\u201d.\n\nIn our project, there is a data folder that contains our sentences in a single text file which is .\n\nUsing word tokenizer method of NLTK (Natural Language Toolkit), we store all words of each sentences in an array. Before we tokenize sentences, we convert the sentences to lowercase, and we eliminate punctuations.\n\nBy using Word2Vec and sentences array, we train our model and store it in a model variable.\n\nIn order to use our trained model later, we can save it as a binary file as following.\n\nWe create a new python file which is \u201capi.py\u201d to serve a service loading trained model.\n\nIn order to run our REST API, we can call the following url.\n\nThen, it returns a JSON response as below.\n\nIn conclusion, we have trained a Word2Vec model with the help of Gensim in Python, and we have used that trained model when creating REST API with Flask. In addition, you can see all project on https://github.com/alibugra/flask-gensim."
    }
]