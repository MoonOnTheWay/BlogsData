[
    {
        "url": "https://medium.com/@vihar.kurama/learning-through-lost-memories-6ace8a0cb69f?source=user_profile---------1----------------",
        "title": "Learning through lost memories. \u2013 Vihar Kurama \u2013",
        "text": "In the previous article, we saw how humans connect things, how neurons play a significant role in correlating and analysing things. Let\u2019s go to the inception of all this. I\u2019d like to share a small story from the past, which pulled me into an ocean full of questions. I always found computers fascinating which made understand how things work inside it since my childhood. When I was young, it was magical for me how machines are so fast and why isn\u2019t my brain reaching the same capacity as of the machine to compute things. So I used to compare the memory power of Human Brain and the Machine.\n\nMy research and work didn\u2019t give me an exact answer. But one day I experienced the power of human neuron memory, How everything is saved inside our brains undying. Let me share an experience where I realised this. One day my friend and I decided to work on a project together, days passed everything went well. Life used to be very happy with friends around you, but then suddenly there was a fight between us, and we didn\u2019t talk for almost a year. Cut to the chase it was only like any normal day in my routine I closed my eyes after doing a lot of work completely unconscious; suddenly I saw my friend sitting beside me. I didn\u2019t understand the entire situation, hours passed. Then suddenly a big sound struck in my ears, then I realised it was a dream. Then I asked myself a question? Why did my friend come to me again, why do we see each other back? It\u2019s been almost a year since we spoke. Did I think of my friend in the whole day? No. The past week? No. Why suddenly?\n\nI was astonished why it came up suddenly? Then I understood every situation in our lives is somewhere cached in our brain. They trigger unknowingly without any reason. Luckily this dream which I was mentioning is also stored in some other neurons; this explains the data transfers inside our brain.\n\nSo it basically starts with one thing, and then it connects with the others, and then it creates a few if necessary- \u201cThe Neurons.\u201d Fortunately, neurons never die they sleep so when we process or pass it some energy; these come back to life. In fact, there\u2019s a new technology coming up for tracing the precise pathways of neural connections in the brain works with numbers of cells that were unimaginable carried out by Tony Zador. So based on this pathway that neurons take we take up the decisions. Getting to the technicalities learnt from all these biological experiences. What can we do with all this? Do we require to think about it? The answer is yes.\n\nPersonally, you are compiled and executed with this. When it comes to computer science every point mentioned above was about \u201cDeep Learning.\u201d The name itself explains you everything. Deep which means connecting, going inside and learning through it. Whatever the brain is advancing and talked about previously are now imitated by machines. But as I mentioned in my first article that computers could only understand 0\u2019s and 1\u2019s we convert all the neurons into numbers. In deep learning, the connections between these numbers are known as the weights. So the equations/problems are passed through these neurons in the computer. All these neurons are organised in a network like structure both in machines and humans. So we call it as Neural Network. Now with this neural network, we can solve numerous problems.\n\nWho am I? I\u2019m just a passionate engineer trying to understand machines and humans and all the underlying science in them.Hope this article helped you understand how your brain thinks and stores the whole lot of information. All you need to do is to think deeper. I intentionally left this article incomplete for you to connect to things. Stay tuned for next article."
    },
    {
        "url": "https://towardsdatascience.com/learning-humans-the-machine-way-26bb2137e1ec?source=user_profile---------2----------------",
        "title": "Learning humans the machine way. \u2013",
        "text": "What are we exactly, what\u2019s happening in our very own brain? Is it just a chemical reaction that makes people think? Or is it more than that. We, humans, created so many metrics to solve a lot of problems to survive and help each other. But we still make mistakes like being lost, losing control and ignoring. We connect random moments making things more complicated. What\u2019s the equation behind it? Is it the environment or people around you or is it the very own you? After thinking all this, I started analysing how machines work how they compute heavy calculation. How they process? How they are now achieving the ability to think the \u201cThe Artificial Intelligence.\u201d When you can understand machines, it will please you to follow the very problem of humans mentioned above.\n\nEverything in this world can be confined to 0s and 1s. These zeros and ones are the computational units behind the Technology. When it comes to our human brains, we named these computational units as Neurons. So what do this computational units make? Can these be cut down into more subparts? The answer is yes; we can even limit these computation units into smaller parts. It\u2019s about your perception of understanding things. Let\u2019s take an example of a computer solving a simple math equation, a +b. Computers never recognized the real numbers, the only thing it can understand is binary a zero or one. If it\u2019s a one, then the power passes through the circuit if it\u2019s a zero then it won\u2019t work in layman terms. But then the medium through which it can understand all the complicated equations is \u201cThe Programming Languages.\u201d\n\nSimilarly, neurons never experience the emotions or the environment we live in. They act like the problem solvers, sometimes problem creators. They connect everything every situation in a flash. Can we control it? The answer is no. Cause it will be in the neuron control, looping you through things. The problem-solving capacity of yours will be linked to the neuron-neuron interaction, how fast they connect. It depends on how you train them from your childhood. \u201cHow you train them?\u201d Can we train them? No. They just will be adjusted to how you do things, the equation you pass in through it.\n\nEven for computers, we don\u2019t know how the binary works inside, we pass in the equation. Fortunately, our brain isn\u2019t made of copper layers or fibreglass. Though we can train it to compute fast, it takes years of time. Machines are good at storage and speed, but brains maintain the efficiency lead.\n\nThe reason for this writing is sometimes, I don\u2019t understand why I make things more complicated thinking about a problem, I realise then, it\u2019s not me thinking about the issue. Its because there are a lot of chemical reactions and computations that I cannot control myself. Then while I was trying to understand computers/machines, I got to know that I could validate a statement stated by one of my inspirational figures. \u201cAI\u2019s limitations involves building \u201ca bridge between computer science and biology.\u201d\n\nI am a passionate engineer trying to understand machines and humans. This article could help you to solve your problems a bit simpler and easier. All you need to do is to think deeper. I left the article incomplete for you to connect things. Stay tuned for next article."
    },
    {
        "url": "https://towardsdatascience.com/deep-learning-with-python-703e26853820?source=user_profile---------3----------------",
        "title": "Deep Learning with Python \u2013",
        "text": "The main reason behind deep learning is the idea that, artificial intelligence should draw inspiration from the brain. This perspective gave rise to the \u201cNeural Network\u201d terminology. The brain contains billions of neurons with tens of thousands of connections between them. Deep learning algorithms resemble the brain in many conditions, as both the brain and deep learning models involve a vast number of computation units (Neurons) that are not extraordinarily intelligent in isolation but become intelligent when they interact with each other.\n\nThe basic building block for neural networks are artificial neurons, which imitate human brain neurons. These are simple, powerful computational units that have weighted input signals and produce an output signal using an activation function. These neurons are spread across the several layers in the neural network.\n\nDeep learning consists of artificial neural networks that are modelled on similar networks present in the human brain. As data travels through this artificial mesh, each layer processes an aspect of the data, filters outliers, spots familiar entities, and produces the final output.\n\nInput layer : This layer consists of the neurons that do nothing than receiving the inputs and pass it on to the other layers. The number of layers in the input layer should be equal to the attributes or features in the dataset.\n\nOutput Layer:The output layer is the predicted feature, it basically depends in the type of model you\u2019re building.\n\nHidden Layer: In between input and output layer there will be hidden layers based on the type of model. Hidden layers contain vast number of neurons. The neurons in the hidden layer apply transformations to the inputs and before passing them. As the network is trained the weights get updated, to be more predictive.\n\nWeights refer to the strength or amplitude of a connection between two neurons, if you are familiar with linear regression you can compare weights on inputs like coefficients we use in a regression equation.Weights are often initialized to small random values, such as values in the range 0 to 1.\n\nFeedforward supervised neural networks were among the first and most successful learning algorithms. They are also called deep networks, multi-layer Perceptron (MLP), or simply neural networks and the vanilla architecture with a single hidden layer is illustrated. Each Neuron is associated with other neuron with some weight,\n\nThe network processes the input upward activating neurons as it goes to finally produce an output value.This is called a forward pass on the network.\n\nAn activation function is a mapping of summed weighted input to the output of the neuron. It is called an activation/ transfer function because it governs the inception at which the neuron is activated and the strength of the output signal.\n\nWe have many activation functions, out of which most used are relu, tanh, solfPlus.\n\nThe cheat sheet for activation functions in given below.\n\nThe predicted value of the network is compared to the expected output, and an error is calculated using a function. This error is then propagated back within the whole network, one layer at a time, and the weights are updated according to the value that they contributed to the error. This clever bit of math is called the Back-Propagation algorithm. The process is repeated for all of the examples in your training data. One round of updating the network for the entire training dataset is called an epoch. A network may be trained for tens, hundreds or many thousands of epochs.\n\nThe cost function is the measure of \u201chow good\u201d a neural network did for it\u2019s given training input and the expected output. It also may depend on attributes such as weights and biases.\n\nA cost function is single-valued, not a vector because it rates how well the neural network performed as a whole. Using the Gradient Descent optimization algorithm, the weights are updated incrementally after each epoch.\n\nThe magnitude and direction of the weight update is computed by taking a step in the opposite direction of the cost gradient.\n\nwhere \u0394w is a vector that contains the weight updates of each weight coefficient w, which are computed as follows:\n\nWe calculate the gradient descent until the derivative reaches the minimum error, and each step is determined by the steepness of the slope (gradient).\n\nThis class of networks consists of multiple layers of neurons, usually interconnected in a feed-forward way (moving in a forward direction). Each neuron in one layer has direct connections to the neurons of the subsequent layer. In many applications, the units of these networks apply a sigmoid or relu (Rectified Linear Activation) function as an activation function.\n\nNow consider a problem to find the number of transactions, given accounts and family members as input.\n\nTo solve this first, we need to start with creating a forward propagation neural network. Our Input layer will be the number of family members and accounts, the number hidden layers are one, and the output layer will be the number of transactions.\n\nGiven weights as shown in the figure from the input layer to hidden layer with the number of family members 2 and number of accounts 3 as inputs.\n\nNow the values of hidden layer (i, j) and output layer (k) will be calculated using using forward propagation by the following steps.\n\nValue of i will be calculated from input value and the weights corresponding to the neuron connected.\n\nFor neural Network to achieve their maximum predictive power we need to apply an activation function for the hidden layers.It is used to capture the non-linearities. We apply them to the input layers, hidden layers with some equation on the values.\n\nHere we use Rectified Linear Activation (ReLU)\n\nKeras is a high-level neural networks API, written in Python and capable of running on top of TensorFlow, CNTK, or Theano.\n\nTo install keras on your machine using PIP, run the following command.\n\nFully connected layers are described using the Dense class. We can specify the number of neurons in the layer as the first argument, the initialisation method as the second argument as init and determine the activation function using the activation argument. Now that the model is defined, we can compile it. Compiling the model uses the efficient numerical libraries under the covers (the so-called backend) such as Theano or TensorFlow. So far we have defined our model and compiled it set for efficient computation. Now it is time to run the model on the PIMA data. We can train or fit our model on our data by calling the fit() function on the model.\n\nLet\u2019s get started with our program in KERAS,\n\nThe neural network trains until 150 epochs and returns the accuracy value."
    },
    {
        "url": "https://towardsdatascience.com/r-lang-zero-to-hero-c59a9f66841c?source=user_profile---------4----------------",
        "title": "R Lang: Zero to Hero \u2013",
        "text": "R is a computing environment that combines a programming language called S, that implements the idea of programming with data. It has powerful numerical analysis tools for linear algebra, differential equations, and stochastics. R Programming lets you learn about data visualisations by offering a set of inbuilt functions and libraries. There are many graphical front-ends for R. At present, the best of these appears to be RStudio. Before learning about these, however, you should learn a little about R itself.\n\nThe snippets of code that are written in the R language are always available to the user, so a small change to the task usually requires only a minor change to the code \u2014 a difference that can be carried out in a lesser amount of time.\n\nTo download R, please choose your preferred CRAN mirror.\n\nRStudio makes R easier to use. It includes a code editor, debugging & visualisation tools. It is an (IDE) which includes a console, syntax-highlighting editor that supports direct code execution, as well as tools for plotting, history, debugging and workspace management.\n\nDownload R-Studio from the following link.\n\nAfter installing R on your machine, then start the R interactive Shell by hitting R in the terminal or shell. The default prompt is \u2018>\u2019, which on UNIX might be the same as the shell prompt, and so it may appear that nothing is happening, it will be waiting for the user for the instruction.\n\nYou can use the R Shell as a calculator, you can just play with from doing simple math to advance Machine Learning Algorithms.\n\nTo quit the R program the command is\n\nThis will exit from the R Shell you can also save the workspace session by hitting \u201cy\u201d after exiting if to wish to continue without saving just hit \u201cn\u201d, which brings you back to the terminal/shell.\n\nLets\u2019s get started with printing \u201cHello World!\u201d in the R interactive Shell.\n\nIn R we use print() function to return the String given in the argument.\n\nAs we know every programming language needs comments, R supports comments, which are ignored by the interpreter.\n\nThis it how we use comments in R.\n\nIn programming, a variable is nothing more than a name for something. A variable in R can store an atomic vector, group of atomic vectors or a combination of many R objects. R names are case sensitive. To create names for the data structures, we have to follow the following rules:\n\nNow let\u2019s see how we declare variables in R\n\nThis line of code declares a variable \u201ca\u201d and assigns it to the value 3.\n\ntypeof() function returns the datatype of the variable.\n\nNumeric (real or decimal): Decimal values are called numerics in R. It is the default computational data type.\n\nInteger: In order to create an integer variable in R, we invoke the as integer function.\n\nCharacter: A character object is used to represent string values in R. We convert objects into character values with the as character() function.\n\nLogical: A logical value is often created via comparison between variables.\n\nComplex: A complex value in R is defined via the pure imaginary value i.\n\nAll the basic operations like addition, subtraction, division, multiplication. Etc Can be performed in R.\n\nA vector is the most commonly used data structure in R . It is a sequence of data elements of the same basic type. Members in a vector are officially called components. A vector can be a vector of elements that are most commonly , , or\n\nWe use vector() function to create an empty vector, the below snippet show\u2019s how we declare a vector.\n\nLists in R lang act as containers. They are generic vector containing other objects. Unlike atomic vectors, the variables of a list are not limited to a single mode and can include any mixture of data types. A list can contain other lists. This makes them unique from atomic vectors.\n\nLists in R are created using list() function.\n\nMatrices are special types of Vectors in R. A matrix is a collection of data elements arranged in a two-dimensional rectangular layout. Matrices have rows and columns.\n\nNow let\u2019s create a 2x2 matrix, we use matrix function and send the rows and columns as parameters. The number of rows will be nrow, the number of columns will be ncol.\n\nDataframes are on of the most used data structures in R Language. The data is represented in a tabular format which has number of rows and columns.\n\nWe usually read csv files into a data frame to do that we use read.csv() function or read.table() function and send the csv file name as an argument.\n\nWe can also create a data frame using data.frame() function.\n\nThese are few import functions we apply to a data frame to draw minimal conclusions.\n\nFactors are pretty much integers that have labels on them. While factors look (and often behave) like character vectors, they are actually integers under the hood, and you need to be careful when treating them like strings. Some string methods will coerce factors to strings, while others will throw an error.\n\nFactors can be created with . Input is generally a character vector.\n\nThese allow you to control the flow of execution of a script typically inside of a function. Common ones include:\n\nWe always need the ability to check the conditions and change the behavior of the program accordingly. The conditional statements give us the ability; the simplest form is the \u2018if\u2019 statement.\n\nThe for loop in R has the ability to iterate over items of any sequence such as list or vectors.\n\nThis is how we declare for loop in R, it takes the iterable variable(i) and iterates until the range given (10, here)\n\nFew ways of implementing for loops.\n\nA while loop statement in R lang repeatedly executes a target statement as long as the given condition is true. Unlike the for loop, the while loop will not run n times, but until a defined condition is met.\n\nHere\u2019s an example of how we can implement a simple while loop,\n\nA repeat loop is used to iterate over a block of code multiple number of times.There is no condition check in repeat loop to exit the loop.\n\nNow let\u2019s print first five numbers using repeat and break.\n\nThe main use of a function in any programming language is reusability. They are the set of statements organised together to perform a specific task. There are various inbuilt functions in R. Some of the inbuilt functions in R are sum(), min(), max(),mean(), etc.\n\nNow let\u2019s create a function to print cubes of numbers in sequence.\n\nVisualising the data is one of the vital solutions for decision making. R Programming language offers a one of the best set of inbuilt function and libraries (such as ggplot2, leaflet, lattice) for creating data stories and visualisation.\n\nNow, let\u2019s create a simple line plot using ggplot2 in RStudio, to do that we need to install the ggplot2 package, you will find the console in the left corner. Run the command install.packages(\u201cpackage_name\u201d).\n\nWe will now import a inbuilt dataset(mpg), and plot a simple graph.\n\nAbout mpg dataset: It\u2019s a fuel economy data from 1999 and 2008 for 38 popular models of car."
    },
    {
        "url": "https://towardsdatascience.com/supervised-learning-with-python-cf2c1ae543c1?source=user_profile---------5----------------",
        "title": "Supervised Learning with Python \u2013",
        "text": "Consider the example of a medical researcher who wants to analyze breast cancer data to predict which one in three specific treatments a patient should receive. This data analysis task is called Classification, where a model or classifier is constructed to predict class labels, such as \u201ctreatment A,\u201d \u201ctreatment B\u201d or \u201ctreatment C.\u201d\n\nClassification is a prediction problem that predicts the categorical class labels which are discrete and unordered. It is a two-step process, consisting of a learning step and a classification step.\n\nSome of the most used classification algorithms\n\nIn the learning step, the classification model builds the classifier by analysing the training set. In the classification step, the class labels for given data are predicted. The dataset tuples and their associated class labels under analysis are split into a training set and test set. The individual tuples that make up the training set are randomly sampled from the dataset under analysis. The remaining tuples form the test set and are independent of the training tuples, meaning that they will not be used to build the classifier.\n\nThe test set is used to estimate the predictive accuracy of a classifier. The accuracy of a classifier is the percentage of test tuples that are correctly classified by the classifier. To achieve higher accuracy, the best way is to test out different algorithms and trying different parameters within each algorithm as well. The best one can be selected by cross-validation.\n\nTo choose a good algorithm for a problem, parameters such as accuracy, training time, linearity, number of parameters and special cases must be taken into consideration for different algorithms.\n\nImplementing KNN in Scikit-Learn on IRIS dataset to classify the type of flower based on the given input.\n\nFirst steps, to apply our machine learning algorithm we need to understand and explore the given dataset. In this example, we use IRIS dataset which is imported from the scikit-learn package. Now let\u2019s dive into Code and explore the IRIS dataset.\n\nMake sure Python is installed on your machine. Also, install these following packages using PIP\n\nIn this snippet of code we learn about the attributes of the IRIS dataset using few methods in pandas.\n\nAn algorithm is said to be a Lazy Learner if it simply stores the tuples of the training set and waits until the test tuple is given. Only when it sees the test tuple does it perform generalisation to classify the tuple based on its similarity to the stored training tuples.\n\nKNN is based on learning by analogy, that is, by comparing a given test tuple with training tuples that are similar to it. The training tuples are described by n attributes. Each tuple represents a point in an n-dimensional space. In this way, all training tuples are stored in n-dimensional pattern space. When given an unknown tuple, a k-nearest neighbor classifier searches the pattern space for the k training tuples that are closest to the unknown tuple. These k training tuples are the k \u201cnearest neighbors\u201d of the unknown tuple.\n\n\u201cCloseness\u201d is defined regarding a distance metric, such as Euclidean distance. A good value for K is determined experimentally.\n\nIn this snippet, we give import KNN classifier from sklearn and apply to our input data which then classifies the flowers.\n\nBased on the given input, the machine predicted the both flowers are Versicolor using KNN.\n\nRegression is usually termed as determining relationships between two or more variables. For example consider you have to predict the income of a person, based on the given input data X.\n\nHere, target variable means the unknown variable we care about predicting, and continuous means there aren\u2019t gaps(discontinuities) in the value that Y can take on.\n\nPredicting income is a classic regression problem. Your input data should have all the information (known as features) about the individual that can predict income such as his working hours, education experience, job title, a place he lives.\n\nSome of the commonly used Regression models are :\n\nLinear Regression establishes a relationship between dependent variable (Y) and one or more independent variables (X) using a best fit straight line (also known as regression line).\n\nwhere \u03b2o is the intercept, \u03b21 is the slope of the line and e is error term.\n\nLogistic Regression is an algorithm, that is used where the response variable is categorical. The idea of Logistic Regression is to find a relationship between features and probability of particular outcome.\n\nPolynomial Regression is a form of regression analysis in which the relationship between the independent variable x and the dependent variable y is modelled as an nth degree polynomial in x\n\nWe have our dataset X, and corresponding target values Y, We use Ordinary Least Squares to learn a linear model that we can use to predict a new y given a previously unseen x with as little error as possible.\n\nThe given data is split into a training dataset and a test dataset. The training set has labels (features loaded), so the algorithm can learn from these labeled examples. The testset do not have any labels, i.e., you don\u2019t yet know the value trying to predict.\n\nWe\u2019ll consider one feature to be trained, and apply linear regression method to fit the training data, and then predict the output using the test dataset.\n\nGraph between (diabetes_X_test, diabetes_y_pred) predictions will be continuous on the line equation."
    },
    {
        "url": "https://towardsdatascience.com/rust-off-the-grid-introduction-to-rust-programming-language-58df4f2a5664?source=user_profile---------6----------------",
        "title": "Rust off the grid: Introduction to Rust Programming Language.",
        "text": "Rust is a very modern language. It uses LLVM on its backend. Rust supports a mixture of imperative procedural, concurrent actor, object-oriented and pure functional styles. It also helps generic programming and meta programming, in both static and dynamic techniques.\n\nRust is a systems programming language focusing on safety, speed, and concurrency. It accomplishes these goals by being memory safe without using Garbage Collection.\n\nIf you\u2019re on Linux or a Mac, all you need to do to install Rust is power up your terminal and run :\n\nIf you\u2019re on Windows, please download either the 32-bit installer or the 64-bit installer and run it.\n\nIf you\u2019ve got Rust installed, you can open up yourshell, and type this:\n\nHere is the official installation guide.\n\nNow let\u2019s get started with our traditional program, \u201cHello World \u201c\n\nOur program begins with the main function, statements after the main function will be executed while complied.\n\nprintln! is called as a macro which is similar to a function but ends with an exclamation/bang \u201c!\u201d, but instead of a function call, macros are expanded into source code that gets compiled with the rest of program.\n\nNow to run our program first, we need to compile our code using the command \u2018rustc file_name.rs\u2019 which then generates a binary file which should to executed.\n\nAs we know every programming language needs comments, Rust supports a few different varieties of comments, which are ignored by the compiler.\n\nThese are the types of comments which we often use.\n\nA variable is a piece of storage that contains a value. In Rust, it\u2019s easy to define a variable and set a value to it. Imagine you want to store the number 1in a variable called one.\n\nAs simple as that! You just assigned the variable one to the value 1, let is used to introduce a binding.\n\nRust offers you to declare variables of your own size, as rust is a statically typed language we can specify our types up front, and they\u2019re checked at compile time.\n\nHere is an example of declaring 32-bit signed integer. We use let for binding, followed by a variable name and the type, size which come after a colon (:).\n\nRust has many different primitive integer types. They begin with i for signed integers and u for unsigned integers. The possible integer sizes are 8, 16, 32, and 64 bits.\n\nIn Rust when you declare a variable, the bindings are immutable which means we cant change the value of the variable.\n\nThis piece of code gives an error it shows re-assignment of immutable variable `x\u2019!\n\nIf you want a binding to be mutable, you can use keyword mut.\n\nA standard boolean. Can be either true or false.\n\nSo far we\u2019ve only worked with bools and numbers, but Rust supports letters too. Rust\u2019s type is the language\u2019s most primitive alphabetic type, and the following code shows one way to use it:\n\nThese types include i8, i16, i32, i64, isize, u8, u16, u32, u64, usize. The letter denotes whether it is signed (i) or unsigned (u), and the number denotes the size of the integer. So the type i8 is an 8 bit, integer and a u64 is an unsigned, 64 bit integer. isize and usize are dependent upon the architecture of the computer.\n\nThese types include f32 and f64. A floating point number is what we typically refer to as a decimal.\n\nAn array is fixed-size, collection of same-type elements.\n\nIt is declared like:\n\nFixed-size ordered list of elements of different(or same) data types\n\nDeclaration of tuples is similar to an array. Instead we use \u201c( )\u201d instead of \u201c[ ]\u201d.\n\nTuples are also immutable by default, and even with mut, its element count cannot be changed. Also if you want to change an element\u2019s value, the new value should have the same data type of previous value.\n\nAn str is a \u201cString Slice,\u201d and is the most primitive string type.\n\nNow something that trips some people when getting started with rust is printing variables \u2018{ }\u2019. In order to print this we would need to write:\n\nWhich is similar to Python formatting.\n\nIn Rust, vectors store their contents as contiguous arrays of T on the heap. This means that they must be able to know the size of T at compile time (that is, how many bytes are needed to store a T?).\n\nYou can create them with the vec! macro:\n\nWe always need the ability to check the conditions and change the behavior of the program accordingly. The conditional statements give us the ability; the purest form is the \u2018if\u2019 statement.\n\nThe most common constructs that let you control the flow of execution of Rust code are if expressions and loops.\n\nAll expressions start with the keyword , which is followed by a condition. we can also include an expression, to give the program an alternative block of code to execute should the condition evaluate to false.\n\nRust currently provides three approaches to performing some kind of iterative activity. They are: for, while and loop. Each approach has its own set of uses.\n\nFor loops in rust is used for iterating based on the given start position and end position. Rust\u2019s for loop doesn\u2019t look like this \u201cC-style\u201d for loop, it looks like this.\n\nIn this example the variable x iterates from 0 to 9 and prints the numbers upto 9.\n\nRust also has a while loop. While the condition is true, the loop runs. When the condition ceases to be true, you call , stopping the loop.\n\nIt looks like this :\n\nThe keyword tells Rust to execute a block of code over and over again forever or until you explicitly tell it to stop.To stop this infinite loop we need to interrupt it by a keyboard shortcut (CRTL + C).\n\nFunction is a block of reusable code that performs a specific task. It is a small unit of computation which may take arguments and may return values.\n\nEvery Rust program has at least one function, the main function:\n\nIn Rust to declare functions we use fn keyword followed by the function name, some parentheses where we include the arguments if we have any.\n\nNow let\u2019s write a function where we can add two integers.\n\nThe functions are declared called in the main function and declared out of it.\n\nYou separate arguments with a comma, both when you call the function, as well as when you declare it.\n\nBy default functions return empty tuple (). If you want to return a value, return type must be specified after -> .\n\nHere\u2019s an example of a function that returns the numbers.\n\nIn the above program the function plus_one() and plus_two() returns the integer types and we are assigning them to the variables in the main function."
    },
    {
        "url": "https://towardsdatascience.com/python-programming-in-15-min-part-3-ce882f9ab9b2?source=user_profile---------7----------------",
        "title": "Python Programming in 15 min Part 3 \u2013",
        "text": "The most common perspective in Python is that it handles all errors with exceptions.An exception is a signal that an error or other unusual condition has occurred.There are several built-in exceptions, which indicates certain conditions like IndentationError: unexpected indent, ZeroDivisionError: division by zero. You can also define your exceptions.\n\nPrograms are susceptible. It would be nice if the code always returns a valid result, but sometimes a correct result cannot be calculated.\n\nFor Example, it is not possible to divide a number by zero or to access the third element in a negative item list.\n\nUntil now error messages haven\u2019t been more than mentioned, but if you have tried out the examples, you have probably seen some. There are (at least) two distinct kinds of errors:\n\nSyntax errors, also known as parsing errors, are perhaps the most common kind of complaint you get while you are still learning Python.Syntax errors are almost always fatal, i.e. there is almost never a way to successfully execute a piece of code containing syntax errors.\n\nThe error is caused by the token preceding the arrow.In this example the error is detected at print() function as the parentheses is not closed.\n\nSince a colon \u2018 : \u2019 is missing after the condition of while loop it encountered a syntax error.\n\nExceptions occur when exceptional situations happen in your program. For Example, what if you are going to read a file that doesn\u2019t exist or what if you accidentally deleted it when the program is running. Such situations are handled using exceptions.\n\nSimilarly, what if your program had some wrong statements?\n\nThis is handled by Python which conveys you that there is an error.\n\nConsider a simple print function call. What if we misspelled the word print as Print? Note the capitalisation here. In this case, Python raises a syntax error.\n\nObserver that a NameError is raised and also the location where the error was detected is printed.\n\nZeroDivisionError : When a number is divided by zero.\n\nIndexError : When the index is out of range.\n\nTypeError : Raised when an operation or function is applied to an object of inappropriate type\n\nKeyError : It occurs when a dictionary is incorrectly used.\n\nLike many other programming languages, Python has exception handling. We can handle the exceptions using the try except for statement. We basically put our general statements within the try-block and keep all our error handlers in the except block.\n\nA try clause can have any number of except clause to handle them differently, but only one will be executed in case an exception occurs.\n\nWe can use a tuple of values to specify multiple exceptions in an except clause. Here is an example pseudo code.\n\nIn Python programming, exceptions are raised when corresponding errors occur at run time, but we can forcefully raise it using the keyword raise.\n\nLet\u2019s raise a value error and except the error.\n\nThe try statement in Python can have an optional finally clause. This clause is executed no matter what, and is generally used to release external resources.\n\nHere it tries to open the file text.txt in the current directory or else it raises a FileNotFoundError error.\n\nPython comes with hundred of modules that do all sort of things. There are also third party modules that are available for download from the internet.\n\nPython includes a set of modules called the standard library, for example, math, cmath which contains mathematical functions for real and complex numbers, but there are much more.\n\nA module is imported using the import statement.\n\nLet\u2019s now import few modules and run functions in them.\n\nHere we imported math module and used sin and cos functions which returns the values.\n\nIn this example, we had imported time module and called asctime function from that module, which returns the current time as a String.\n\nHere, we have imported just the asctime function from the time module.\n\nConsider a sound package, the way organise your Python code creates awesome packages.\n\nPython has got the greatest community for creating Python packages. There are more than 1,00,000 packages available at https://pypi.python.org/pypi .\n\nPython package is a collection of all modules connected properly into one form and distributed PyPi, The Python Package Index maintains the list of Python packages available. Now when you are done with pip setup Go to command prompt or terminal and say\n\nAfter running this command the package will be installed in your python library.You can import the package and them in your program."
    },
    {
        "url": "https://towardsdatascience.com/python-programming-in-15-min-part-2-480f78713544?source=user_profile---------8----------------",
        "title": "Python Programming in 15 min Part 2 \u2013",
        "text": "The for loop in Python has the ability to iterate over items of any sequence such as list or string.\n\nIt steps through the items in any ordered sequence i.e, String, List, Tuples, the keys of dictionaries and other iterable terms. The python for loop starts with a keyword for followed by a variable attribute, which will hold the values of the following sequence object.\n\nIn this case, we just print the value in the block of statements.\n\nA while loop statement in Python programming language repeatedly executes a target statement as long as the given condition is true. Unlike the for loop, the while loop will not run n times, but until a defined condition is met.\n\nThe range function in Python generates a list of numbers, which can be used to iterate over for loops and in other few cases.\n\nNow let\u2019s see how range function works\n\nrange(n) generates, the integer numbers starting with 1 and ending with (n-1).\n\nrange(begin, end) generates the integer numbers starting with begin and ending with end-1.\n\nPrinting the squares of numbers iterating by range function.\n\nFunction is a block of reusable code that performs a specific task. It is a small unit of computation which may take arguments and may return values.\n\nThe keyword def introduces a function definition followed by the function name and the parenthesised list of formal parameters. The statements that form the body of the function start at the next line and must be indented.\n\nIn this program we created a function named greet with no parameters such as empty parenthesis. The function is defined to print a string called \u201cHello ! Welcome to the party.\u201d\n\nSo calling the function just prints the given string.\n\nA function can take parameters which are values you supply to the function so that the function can do something utilising those. Parameters are specified within the pair of parentheses in the function definition separated by commas.\n\nAlso see Recursion, Scope of Variable.\n\nIn all the programs we wrote till now, we have designed our program around functions i.e. blocks of statements which manipulate data. This is called the procedure-oriented way of programming. There is another way of organising your program which is to combine data and functionality and wrap it inside something called a class. This is called the object oriented programming paradigm.\n\nA quick glance at the basics of the Object Orientation terminology.\n\nClass : A class is the blueprint from which individual objects are created.\n\nObject : A real World entity which have state and behavior.\n\nLet\u2019s create a class Person with a class method say in the class.\n\nNow let\u2019s create an object instance for the class.\n\nExtending the plot further lets us create two methods, hello and bye that take arguments.\n\nThis needs us to repeat the instance variable for every class method instead of creating an object with the instance variables. It\u2019s now time to work with constructors.\n\nConstructors in Python are written under a special method __init__.\n\nNow let us write a constructor for an object. In this, example let\u2019s create an object with instance variables name and year_of_birth.This process of writing a constructor in a class eliminates the repeating of the instance variables for every instance method."
    },
    {
        "url": "https://towardsdatascience.com/python-programming-in-15-min-part-1-3ad2d773834c?source=user_profile---------9----------------",
        "title": "Python Programming in 15 min Part 1 \u2013",
        "text": "Python 3.0 also known as Python 3000 is an easy to learn, powerful programming language. It has efficient high-level data structures and a simple but effective approach to object-oriented programming. Python\u2019s elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.\n\nLet\u2019s write our first program to, print \u201cHello World !\u201d\n\nIn Python, we use print(\u201c\u201d) function to display text on the screen.\n\nWe use quotations marks for beginning and end of the string; they don\u2019t appear in the result.\n\nIn two ways we can run python program:\n\nAfter installing Python on your machine, to open the Python shell type in \u201cpython3\u201d in your command prompt or terminal, this will begin an interactive python session.This interactive session doesn\u2019t save any of your code in a file; it expires as soon as you exit from the shell.\n\nIn your Python shell, you will find the currently running version of your Python, some information and three arrows waiting for your command. Now let\u2019s write the code to print Hello World in the Python shell.\n\nAs soon as you hit enter the Python interpreter runs the code and gives the output.\n\nGeneral python shell is used to test programs on the go.Use help(anything) for documentation. It\u2019s way faster than any web interface.\n\nTo run Python scripts save your Python code in a .py file and in your command prompt or terminal use python3 file_name.py to run the program.\n\nMake sure you change the directory where you saved the file before doing it.\n\nWhen you are writing large pieces of Python code, then we need to use Script Mode.\n\nYou can use different text editors for writing Python scripts such as Sublime Text , Atom Editor.\n\nAs we know numbers are everywhere, so let\u2019s see how Python deals with numbers.Python shell can be used as a calculator; you can perform the basic mathematical operation in python shell such as addition, division, etc.\n\nIn Python we have three distinct number types they are integers, floating point numbers, and complex numbers. Integers are numbers with no fractional part they can be either positive or negative or unsigned(zero).Float values are numbers with a fractional part.\n\nIn programming, a variable is nothing more than a name for something.Variable names are case sensitive.\n\nTo declare a variable in Python, you have to give its name followed by an equal sign and the initialisation value.\n\nWhen you keep assigning the values to the same variable name Python simply replaces the older value with newer value.\n\nIn python string is a sequence of characters enclosed in either single or double quotes.Strings are immutable sequence of Unicode points.\n\nSometimes we may want to construct strings with the value of the variable and this conceptual construction of strings is called string interpolation.\n\nTo organise and process data efficiently in memory we use data structures, In Python, we have different types data structures and several operations to perform on them.\n\nNow we will discuss three main data structures in Python(Lists, Tuples, Dictionaries)\n\nLists are ordered, mutable sequence of values, these are similar to arrays in C and C++.\n\nTo declare a list in Python we give the list name assigned to values separated by commas.\n\nSimilar to string indices, list indices start at 0, and lists can be sliced, concatenated and so on.\n\nNote: Negative indices starts from the end of the list with index value -1.\n\nWe have several methods on lists here are few examples.\n\nThe index method finds the given value in the list and returns the index value. Index method is used to search where the values are incurred.\n\n\n\nThese are few examples of list methods, to find out more we can use help(list) for all the list methods.\n\nTuples are ordered, immutable sequence of values. Declaring tuples is similar to lists we just enclose the values in pair of parentheses.\n\nTuples are immutable which means we cannot add or delete items in the tuple, and also tuples have no index methods.\n\nTuples are faster than lists and safer.They are written -protected we cannot add new items once the declaration is made.\n\nDictionaries are unordered set key-value pairs.The key and the value can be of different data types.Each value has a unique key which acts as an identifier for that value within the dictionary.\n\nWe always need the ability to check the conditions and change the behavior of the program accordingly. The conditional statements give us the ability; the simplest form is the \u2018if\u2019 statement.\n\nA conditional statement tests an expression to see whether it is true or false and it does the operations based on the result.\n\nNote: Python must know the number of statements which must be executed when the condition happens is true. To enable this the concept of indentation occurs.All the statements below the header (if in this case) must maintain the same level of indentation(4 spaces).\n\nThis concept of indentation is applied throughout Python programs.\n\nIf there are two possibilities of conditions, then we use if, else statement.\n\nIf we have more than two possibilities and we need more than two branches. SO we use chained conditional statements. The term elif is the abbreviation of else if.There is no limit of elif statements, but the last branch has to be an else statement."
    },
    {
        "url": "https://towardsdatascience.com/introduction-to-machine-learning-db7c668822c4?source=user_profile---------10----------------",
        "title": "Introduction To Machine Learning \u2013",
        "text": "Machine Learning is an idea to learn from examples and experience, without being explicitly programmed. Instead of writing code, you feed data to the generic algorithm, and it builds logic based on the data given.\n\nFor example, one kind of algorithm is a classification algorithm. It can put data into different groups. The classification algorithm used to detect handwritten alphabets could also be used to classify emails into spam and not-spam.\n\nE = the experience of playing many games of checkers\n\nP = the probability that the program will win the next game.\n\nThere are many examples of machine learning. Here are a few examples of classification problems where the goal is to categorize objects into a fixed set of categories.\n\nFace detection: Identify faces in images (or indicate if a face is present).\n\nMedical diagnosis: Diagnose a patient as a sufferer or non-sufferer of some disease.\n\nWeather prediction: Predict, for instance, whether or not it will rain tomorrow.\n\nMachine Learning is a field which is raised out of Artificial Intelligence(AI). Applying AI, we wanted to build better and intelligent machines. But except for few mere tasks such as finding the shortest path between point A and B, we were unable to program more complex and constantly evolving challenges.There was a realisation that the only way to be able to achieve this task was to let machine learn from itself. This sounds similar to a child learning from its self. So machine learning was developed as a new capability for computers. And now machine learning is present in so many segments of technology, that we don\u2019t even realise it while using it.\n\nFinding patterns in data on planet earth is possible only for human brains. The data being very massive, the time taken to compute is increased, and this is where Machine Learning comes into action, to help people with large data in minimum time.\n\nIf big data and cloud computing are gaining importance for their contributions, machine learning as technology helps analyse those big chunks of data, easing the task of data scientists in an automated process and gaining equal importance and recognition.\n\nThe techniques we use for data mining have been around for many years, but they were not effective as they did not have the competitive power to run the algorithms. If you run deep learning with access to better data, the output we get will lead to dramatic breakthroughs which is machine learning.\n\nThere are three kinds of Machine Learning Algorithms.\n\nIn supervised learning, the system tries to learn from the previous examples that are given. (On the other hand, in unsupervised learning, the system attempts to find the patterns directly from the example given.)\n\nSpeaking mathematically, supervised learning is where you have both input variables (x) and output variables(Y) and can use an algorithm to derive the mapping function from the input to the output.\n\nThe mapping function is expressed as Y = f(X).\n\nSupervised learning problems can be further divided into two parts, namely classification, and regression.\n\nClassification: A classification problem is when the output variable is a category or a group, such as \u201cblack\u201d or \u201cwhite\u201d or \u201cspam\u201d and \u201cno spam\u201d.\n\nRegression: A regression problem is when the output variable is a real value, such as \u201cRupees\u201d or \u201cheight.\u201d\n\nIn unsupervised learning, the algorithms are left to themselves to discover interesting structures in the data.\n\nMathematically, unsupervised learning is when you only have input data (X) and no corresponding output variables.\n\nThis is called unsupervised learning because unlike supervised learning above, there are no given correct answers and the machine itself finds the answers.\n\nUnsupervised learning problems can be further divided into association and clustering problems.\n\nAssociation: An association rule learning problem is where you want to discover rules that describe large portions of your data, such as \u201cpeople that buy X also tend to buy Y\u201d.\n\nClustering: A clustering problem is where you want to discover the inherent groupings in the data, such as grouping customers by purchasing behaviour.\n\nA computer program will interact with a dynamic environment in which it must perform a particular goal (such as playing a game with an opponent or driving a car). The program is provided feedback in terms of rewards and punishments as it navigates its problem space.\n\nUsing this algorithm, the machine is trained to make specific decisions. It works this way: the machine is exposed to an environment where it continuously trains itself using trial and error method.\n\nMachine Learning theory is a field that meets statistical, probabilistic, computer science and algorithmic aspects arising from learning iteratively from data which can be used to build intelligent applications.\n\nThere are various reasons why the mathematics of Machine Learning is necessary, and I will highlight some of them below:\n\nSelecting the appropriate algorithm for the problem includes considerations of accuracy, training time, model complexity, the number of parameters and number of characteristics.\n\nIdentifying underfitting and overfitting by following the Bias-Variance tradeoff.\n\nEstimating the right determination period and uncertainty.\n\nThe foremost question when trying to understand a field such as Machine Learning is the amount of maths necessary and the complexity of maths required to understand these systems.\n\nThe answer to this question is multidimensional and depends on the level and interest of the individual.\n\nHere is the minimum level of mathematics that is needed for Machine Learning Engineers / Data Scientists.\n\n2. Probability Theory and Statistics (Probability Rules & Axioms, Bayes\u2019 Theorem, Random Variables, Variance and Expectation, Conditional and Joint Distributions, Standard Distributions.)"
    }
]