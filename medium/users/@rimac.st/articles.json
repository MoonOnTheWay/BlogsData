[
    {
        "url": "https://hackernoon.com/image-classification-with-convolutional-neural-networks-e2ec72130ecc?source=user_profile---------1----------------",
        "title": "Image Classification with Convolutional Neural Networks",
        "text": "We\u2019re going to use a pre-trained model, that is, a model created by some one else to solve a different problem. Instead of building a model from scratch to solve a similar problem, we\u2019ll use a model trained on ImageNet (1.2 million images and 1000 classes) as a starting point. The model is a Convolutional Neural Network (CNN), a type of Neural Network that builds state-of-the-art models for computer vision.\n\nWe will be using the resnet34 as our pre-trained model. resnet34 is a version of the model that won the 2015 ImageNet competition. Here is more info on resnet models.\n\nHere\u2019s how to train and evalulate a dogs vs cats model in 4 lines of code, and under 21 seconds. Under the syntax hood below is code/wrapper written by fast.ai. The fast.ai library is updated regularly and keeps up with cuttting-edge deep leaerning research. So fast.ai makes sure that best practices are always used. In turn, this works supper fast (e.g., 10\u201360 seconds depending on GPU) because it sits on top of Pytorch, which is a very flexible library written by facebook.\n\nobject contains the training and validation data.\n\nreads in images and their labels given as sub-folder names:\n\ntrains/fits the model through a given learning rate and epochs. In this instance, it is going to do 3 epochs with a 0.01 learning rate, meaning it is going to look at each image three times in total.\n\nand are the values of the cross-entropy loss function.\n\nHow good is this model? Well, prior to this competition, the state of the art was 80% accuracy. But the competition resulted in a huge jump to 99.0% accuracy, with the author of a popular deep learning library winning the competition. Extraordinarily, less than 4 years later, we can now beat that result in seconds!\n\nAbove model, can be used on any kind of pictures, as long as it is of things that people normally take photos of. However, things like pathology pictures or CT scans won\u2019t do well using this model. There are some minor things we need to do to make those work. This will be covered in a subsequent notebook. Stay tuned!"
    },
    {
        "url": "https://medium.com/@rimac.st/python-for-data-scientists-5b5db9007fd0?source=user_profile---------2----------------",
        "title": "Python for Data Scientists \u2013 Stephen Rimac \u2013",
        "text": "In the last year, I have compiled best practice Python code into a Jupyter notebook. My primary goal was to learn to program. While learning, I created a repository that captures the fundamental Python code driving data analysis and machine learning algorithms. See following GitHub link if you would like to view or use the notebook.\n\nThis Jupyter notebook will help aspiring data scientists learn and practice mission critical Python code needed for many data science projects. Most of the material in this notebook is based on exercises that I completed from a course called Master Machine Learning by EliteDataScience.com. I highly recommend this course for new data scientists or veteran data scientists who require a refresher. I use the notebook regularly, especially when I forget important NumPy or Pandas syntax. I also recommend Python for Data Analysis, 2nd Edition, by William McKinney (creator of Python Pandas). It covers everything you want to know about using Python for your data science projects.\n\nPlease note that this Notebook does not cover machine learning or deep learning algorithms. I only provide the basics of understanding crucial Python libraries such as NumPy and Pandas. See Table of Contents below. I decided to do this because NumPy and Pandas are the backbone of popular modelling libraries. Understanding the basics has helped me understand more advanced libraries like Scikit-learn. Enjoy!"
    }
]