[
    {
        "url": "https://medium.com/@univprofblog1/deep-neural-network-dnn-or-deep-learning-for-both-regression-and-classification-r-code-all-you-a03748b63350?source=tag_archive---------0----------------", 
        "text": "I release R code of Deep Neural Network (DNN) or deep learning. They are very easy to use. You prepare data set, and just run the code! Then, DNN and prediction results for new samples can be obtained. Very simple and easy!\n\nYou can buy each code from the URL below.\n\nhttps://gum.co/gNtso\n\n\u00a0Please download the supplemental zip file (this is free) from the URL below to run the DNN code.\n\n\u00a0http://univprofblog.html.xdomain.jp/code/R_scripts_functions.zip\n\nTo perform appropriate DNN, the R code follow the procedure below, after data set is loaded.\n\n1. Autoscale explanatory variable (X)\n\n\u00a0Autoscaling means centering and scaling. Mean of each variable becomes zero by subtracting mean of each variable from the variable in centering. Standard deviation of each variable becomes one by dividing standard deviation of each variable from the variable in scaling.\n\n2. Divide data set into samples for training network and samples for validating the trained network\n\n\u00a0When the number of components in PLS or C and gamma in SVM is decided, cross-validation is used in a general way. But, it is not used in DNN since it is assumed that the number of samples is enormous in deep learning and it takes amazingly-much time in learning process.\n\n3. Decide candidates of network structure such as the number of layers and the number of units in each layer, (initial) learning rate, factor in updating learning rate, activating function, drop-out rate\n\n5. Calculate Root-Mean-Squared Error (RMSE) in regression or misclassification rate in classification rbetween actual Y and estimated Y for validation samples for each candidate combination\n\n6. Decide the optimal candidate combination with the minimum RMSE value\n\n7. Train final DNN using both training samples and validation samples with the optimal candidate combination\n\n8. Calculate determinant coefficient (r2C) and RMSE (RMSEC) in regression or confusion matrix in classification between actual Y and calculated Y, for the optimal candidate combination\n\n\u00a0r2C means the ratio of Y information that the SVR model can explain.\n\n\u00a0RMSEC means the average of Y errors in the SVR model.\n\n9. Check plots between actual Y and calculated Y in regression\n\n\u00a0Outliers of calculated and estimated values can be checked.\n\n10. In prediction, subtract the mean in the autoscalling of X in 1. from X-variables, and then, divide X-variables by the standard deviation in the autoscalling of X in 1., for new samples\n\n11. Estimate Y based on the DNN in 7.\n\n12. Multiply the standard deviation in the autoscalling of Y in 1. by estimated Y, and then, add the mean in the autoscalling of Y in 1. in regression\n\nEstimated values of Y for \u201cdata_prediction2.csv\u201d are saved in \u201dPredictedY2.csv\u201d.\n\nPlease see the article below.\n\n\u00a0https://medium.com/@univprofblog1/settings-for-running-my-matlab-r-and-python-codes-136b9e5637a1#.paer8scqy", 
        "title": "Deep Neural Network (DNN) or deep learning for both regression and classification: R code \u2014 All you\u2026"
    }, 
    {
        "url": "https://medium.com/the-data-intelligence-connection/machine-learning-enables-efficient-multi-channel-social-customer-support-3c15888e571c?source=tag_archive---------1----------------", 
        "text": "Multi-channel support is becoming more and more common. Customers want the path of least resistance to getting the information they need, and part of that means they want to communicate in the manner that\u2019s most comfortable for them.\n\nThat could be a traditional channel like chat, email, or voice. It could also be a social channel like Facebook, Twitter, or even the Google Play Store, which are becoming more and more popular with customers, as well as ticketing platforms likeZendesk.\n\nThese social channels differ in several critical ways from traditional one-on-one support.\n\nCustomers are interacting on them, whether you want them to or not. If you don\u2019t want your customers sending you emails, you don\u2019t put an email address on the website. Ditto for phone calls. But you have no control over whether a customer decides to tweet at you, mention you in a Facebook post, or leave a negative review on the app store.\n\nThe social nature of these channels also means that there is a lot of potential to engage with customers positively, opening opportunities for the support team to help drive customer value and new customer acquisition. Conversely, there\u2019s strong potential for negative, brand damaging customer conversations that can reach a wide audience in a short amount of time.\n\nDespite the lack of choice in whether their customers interact with the brand on these channels, and the strong benefits that come from actively supporting social, many companies are either engaging half-heartedly or not at all.\n\nThe reason for this is resources.", 
        "title": "Machine Learning Enables Efficient Multi-Channel Social Customer Support"
    }, 
    {
        "url": "https://medium.com/@YvesMulkers/machine-learning-enables-efficient-multi-channel-social-customer-support-36104cb599fe?source=tag_archive---------2----------------", 
        "text": "Multi-channel support is becoming more and more common. Customers want the path of least resistance to getting the information they need, and part of that means they want to communicate in the manner that\u2019s most comfortable for them.\n\nThat could be a traditional channel like chat, email, or voice. It could also be a social channel like Facebook, Twitter, or even the Google Play Store, which are becoming more and more popular with customers, as well as ticketing platforms likeZendesk.\n\nThese social channels differ in several critical ways from traditional one-on-one support.\n\nCustomers are interacting on them, whether you want them to or not. If you don\u2019t want your customers sending you emails, you don\u2019t put an email address on the website. Ditto for phone calls. But you have no control over whether a customer decides to tweet at you, mention you in a Facebook post, or leave a negative review on the app store.\n\nThe social nature of these channels also means that there is a lot of potential to engage with customers positively, opening opportunities for the support team to help drive customer value and new customer acquisition. Conversely, there\u2019s strong potential for negative, brand damaging customer conversations that can reach a wide audience in a short amount of time.\n\nDespite the lack of choice in whether their customers interact with the brand on these channels, and the strong benefits that come from actively supporting social, many companies are either engaging half-heartedly or not at all.\n\nThe reason for this is resources.", 
        "title": "Machine Learning Enables Efficient Multi-Channel Social Customer Support"
    }
]